/*GRID*/

.treas-section {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
  &-md {
    padding-top: 2rem;
    padding-bottom: 2rem;
  }
  &-lg {
    padding-top: 3rem;
    padding-bottom: 3rem;
  }
  &-xlg, &-xl {
    padding-top: 5rem;
    padding-bottom: 5rem;
  }
}

.treas-app-section {
  padding: 3rem 3rem;
  &.secondary {
    background-color: $color-gray-lightest-lite;
  }
  @media screen and (max-width: $screen-xl){
    padding: 1rem 1rem;
  }
  @media screen and (max-width: $screen-lg){
    padding: .5rem 0;
  }
  &[aria-hidden="true"] {
    display: none !important;
  }
}

.treas-app-content{
  align-content: flex-start !important;
  min-height: 100vh;
}


.usdt-grid-container, .usdt-container, .treas-container  {
  max-width: 1440px;
  @include box-sizing;
  margin-left: auto;
  margin-right: auto;
  @include site-padding;

  &.wide {
    max-width: 1440px;
  }
}

.usdt-grid-container-fluid, .usdt-container-fluid {
  width: 100%;
  @include box-sizing;
  max-width: none;
  margin-left: auto;
  margin-right: auto;
  @include site-padding;
  &::before, &::after {
    content: none;
  }
}

.treas-grid {
  &::before, &::after {
    content: none;
  }
  width: 100%;
  @include flex($align-middle:false, $space-between:false, $no-wrap:false);

  // Alignment of columns within
  &.align-bottom {
    align-items: flex-end;
  }
  &.align-middle {
    align-items: center;
  }
  &.align-top {
    align-items: flex-start;
  }
  &.justify-start {
    justify-content: flex-start;
  }
  &.justify-center {
    justify-content: center;
  }
  &.justify-end {
    justify-content: flex-end;
  }
  &.justify-between {
    justify-content: space-between;
  }
  &.justify-around {
    justify-content: space-around;
  }

  // Default 100% width for all columns (mobile)
  @for $i from 1 through $grid-columns {
    &__col-sm-#{$i}, &__col-md-#{$i}, &__col-lg-#{$i} {
      flex: 0 0 100%;
      max-width: 100%;
      width: 100%;
    }
  }
  // Generate grid columns for small breakpoint
  @include breakpoint(S){
    @for $i from 1 through $grid-columns {
      &__col-sm-#{$i} {
         flex: 0 0 100% / $grid-columns * $i;
         max-width: 100% / $grid-columns * $i;
      }
    }
  }
  // Generate grid columns for medium breakpoint
  @include breakpoint(M) {
    @for $i from 1 through $grid-columns {
      &__col-md-#{$i} {
        flex: 0 0 100% / $grid-columns * $i;
        max-width: 100% / $grid-columns * $i;
      }
    }
  }
  // Generate grid columns for large breakpoint
  @include breakpoint(L){
    @for $i from 1 through $grid-columns {
      &__col-lg-#{$i} {
         flex: 0 0 100% / $grid-columns * $i;
         max-width: 100% / $grid-columns * $i;
      }
    }
  }
}


.treas-row {
  @include flex($align-middle:false, $space-between:false, $no-wrap:false);
  @include box-sizing;
  flex: auto; // not sure if this is desired, but it prevents columns from shrinking when content is missing
  // flex-basis: 100%; This was necessary ensure the row breaks from a column based layout, not sure if it is still needed
  margin-left: -$grid-gutter;
  margin-right: -$grid-gutter;
  // Alignment of columns within a row
  &.align-bottom {
    align-items: flex-end;
  }
  &.align-middle {
    align-items: center;
  }
  &.align-top {
    align-items: flex-start;
  }
  &.align-left {
    justify-content: flex-start;
  }
  &.align-center {
    justify-content: center;
  }
  &.align-right {
    justify-content: flex-end;
  }
  &.space-between {
    justify-content: space-between;
  }
  &.space-around {
    justify-content: space-around;
  }
  &.no-gutters {
    margin-left:0;
    margin-right:0;
  }
  @media screen and (max-width: $screen-sm){
    &.align-bottom-sm {
      align-items: flex-end;
    }
    &.align-middle-sm {
      align-items: center;
    }
    &.align-top-sm {
      align-items: flex-start;
    }
    &.align-left-sm {
      justify-content: flex-start;
    }
    &.align-center-sm {
      justify-content: center;
    }
    &.align-right-sm {
      justify-content: flex-end;
    }
    &.space-between-sm {
      justify-content: space-between;
    }
    &.space-around-sm {
      justify-content: space-around;
    }
  }
  @media screen and (max-width: $screen-md){
    &.align-bottom-md {
      align-items: flex-end;
    }
    &.align-middle-md {
      align-items: center;
    }
    &.align-top-md {
      align-items: flex-start;
    }
    &.align-left-md {
      justify-content: flex-start;
    }
    &.align-center-md {
      justify-content: center;
    }
    &.align-right-md {
      justify-content: flex-end;
    }
    &.space-between-md {
      justify-content: space-between;
    }
    &.space-around-md {
      justify-content: space-around;
    }
  }
}
.no-gutters > .treas-col, .no-gutters > [class*="treas-col-"] {
  padding-left:0;
  padding-right:0;
}
.treas-col, *[class^="treas-col-"], *[class*=" treas-col-"] {
  position: relative;
  padding-right: $grid-gutter;
  padding-left: $grid-gutter;
  width: 100%;
  min-height: 1px // prevents column from breaking if empty
}
.treas-col {
  flex-basis: 0;
  flex-grow: 1;
  max-width: 100%;
}
// Generate grid columns
@for $i from 1 through $grid-columns {
  .treas-col-#{$i} {
     flex: 0 0 100% / $grid-columns * $i;
     max-width: 100% / $grid-columns * $i;
  }
}

@media screen and (min-width: $screen-sm){
  .treas-col-sm-auto {
    flex: 0 0 auto;
    width: auto;
    max-width: none;
  }
  // Generate grid columns for small
  @for $i from 1 through $grid-columns {
    .treas-col-sm-#{$i} {
       flex: 0 0 100% / $grid-columns * $i;
       max-width: 100% / $grid-columns * $i;
    }
  }
}

@media screen and (min-width: $screen-md){
  .treas-col-md-auto {
    flex: 0 0 auto;
    width: auto;
    max-width: none;
  }
  // Generate grid columns for medium
  @for $i from 1 through $grid-columns {
    .treas-col-md-#{$i} {
       flex: 0 0 100% / $grid-columns * $i;
       max-width: 100% / $grid-columns * $i;
    }
  }
}
@media screen and (min-width: $screen-lg){
  .treas-col-lg-auto {
    flex: 0 0 auto;
    width: auto;
    max-width: none;
  }
  // Generate grid columns for large
  @for $i from 1 through $grid-columns {
    .treas-col-lg-#{$i} {
       flex: 0 0 100% / $grid-columns * $i;
       max-width: 100% / $grid-columns * $i;
    }
  }
}
@media screen and (min-width: $screen-xl){
  .treas-col-xl-auto {
    flex: 0 0 auto;
    width: auto;
    max-width: none;
  }
  // Generate grid columns for extra large
  @for $i from 1 through $grid-columns {
    .treas-col-xl-#{$i} {
       flex: 0 0 100% / $grid-columns * $i;
       max-width: 100% / $grid-columns * $i;
    }
  }
}
@media screen and (min-width: $screen-xxl){
  .treas-col-xxl-auto {
    flex: 0 0 auto;
    width: auto;
    max-width: none;
  }
  // Generate grid columns for extra extra large
  @for $i from 1 through $grid-columns {
    .treas-col-xxl-#{$i} {
       flex: 0 0 100% / $grid-columns * $i;
       max-width: 100% / $grid-columns * $i;
    }
  }
}

// Generates Column ordering 0-10
$order: 10 !default;
@for $i from 0 through $order {
  .order-#{$i} {
    order: $i;
  }
}
@media screen and (max-width: $screen-sm){ 
  @for $i from 0 through $order {
    .order-#{$i}-sm {
      order: $i;
    }
  }
}
@media screen and (max-width: $screen-md){ 
  @for $i from 0 through $order {
    .order-#{$i}-md {
      order: $i;
    }
  }
}
@media screen and (max-width: $screen-lg){ 
  @for $i from 0 through $order {
    .order-#{$i}-lg {
      order: $i;
    }
  }
}
@media screen and (max-width: $screen-xl){ 
  @for $i from 0 through $order {
    .order-#{$i}-xl {
      order: $i;
    }
  }
}
@media screen and (max-width: $screen-xxl){ 
  @for $i from 0 through $order {
    .order-#{$i}-xxl {
      order: $i;
    }
  }
}
