@mixin flex($align-middle: null, $space-between: null, $no-wrap: null) {
    display: -webkit-flex;
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    @if $align-middle {
      align-items: center;
    }
    @if $space-between {
      justify-content: space-between;
    }
    @if $no-wrap{
      flex-wrap: nowrap;
    }
  }
  
  @mixin page-padding {
    padding: 0 1rem;
    @media screen and (min-width: 600px) {
      padding: 0 2rem;
    }
  }
  
  @mixin header-padding {
    padding: 0 3.5vw;
    @media screen and (min-width: $screen-sm) {
      padding: 0 1.88rem;
    }
  
  }

  @mixin site-padding {
    padding: 0 3.5vw;
    @media screen and (min-width: $screen-sm) {
      padding: 0 1.88rem;
    }
  }
  
  @mixin box-sizing {
    box-sizing: border-box;
  }
  
// Shadows
@mixin box-shadow {
  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.17);
}

// -----------------------------------------------------------------------------
// Breakpoints
$breakpoints: (
  '(min-width: 30.0625em)' 'S',   //  481px at 16px base font
  '(min-width: 37.5em)' 'M',      //  600px at 16px base font
  '(min-width: 54em)' 'L',        //  864px at 16px base font
  '(min-width: 64em)' 'LAPTOP',   // 1024px at 16px base font
  '(min-width: 78.75em)' 'XL'     // 1260px at 16px base font
  '(min-width: 90.0625em)' 'XXL'  // 1441px at 16px base font
);

// -----------------------------------------------------------------------------
// Breakpoints: Primary collection of available media query breakpoints
@mixin breakpoint($point, $direction: 'up') {
  @each $breakpoint in $breakpoints {
    $query: nth($breakpoint, 1);
    $name: nth($breakpoint, 2);

    @if $direction == up {
      @if ($name == $point) {
        @media #{$query} { @content }
      }
    } @else {
      @if ($name == $point) {
        @media #{str-replace($query, "min", "max")} {
          @content
        }
      }
    }
  }
}


// -----------------------------------------------------------------------------
// Grid Functions

@mixin treas-grid-row($justify-content: null, $align-items: null){
  max-width: ($site-max-width + 24px);
  margin-left: auto;
  margin-right: auto;
  font-family: $font-base;
  display: flex;
  flex-flow: row wrap;
  align-content: flex-start;
  @include site-padding;

  @if $justify-content == space-between {
    justify-content: space-between; 
  }
  @else {
    justify-content: flex-start;
  }
  @if $align-items == center {
    align-items: center;
  }
  @else {
    align-items: flex-start;
  }

}

@mixin fsa-grid-row() {
  letter-spacing: -.31em;
  *letter-spacing: normal;
  *word-spacing: -.43em;
  text-rendering: optimizespeed;
  font-family: $font-base;
  display: flex;
  flex-flow: row wrap;
  align-content: flex-start;
  margin-left: -$grid-gutter;
}

@mixin fsa-grid-column() {

  display: inline-block;
  *display: inline;
  zoom: 1;
  letter-spacing: normal;
  word-spacing: normal;
  vertical-align: top;
  text-rendering: auto;
  padding-left: $grid-gutter;

  // scss-lint:disable SelectorFormat
  .fsa-grid--no-gutter & {
    padding-left: 0;
  }

}

@mixin fsa-grid-column-width($numerator, $denominator: $grid-columns) {
  width: ($numerator / $denominator) * 100%;
}



// -----------------------------------------------------------------------------
// Reset <ul>
@mixin reset-ul() {
  display: block;
  list-style-type: none;
  margin: 0;
  padding: 0;
}

// -----------------------------------------------------------------------------
// Reset <li>
@mixin reset-li($display: null) {
  margin: 0;
  padding: 0;

  @if $display == inline {
    display: inline;
  }
  @if $display == inline-block{
    display: inline-block;
  }
  @if $display == block {
    display: block;
  }
}

//@font-face
// Bourbon Mixin for top notch webfont support: https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_font-face.scss
@mixin font-face($font-family, $file-path, $weight: normal, $style: normal ) {
  @font-face {
      font-family: $font-family;
      src: url('#{$file-path}.eot'); //IE9 Compat Modes
      src: url('#{$file-path}.eot?#iefix') format('embedded-opentype'), //IE6-IE8
           url('#{$file-path}.woff') format('woff'), //Modern Browsers
           url('#{$file-path}.ttf') format('truetype'), //Safari, Android, iOS
           url('#{$file-path}.svg##{$font-family}') format('svg'); //Old iOS devices
      font-weight: $weight;
      font-style: $style;
  }
}

// Placeholder
@mixin placeholder {
  $placeholders: ":-webkit-input" ":-moz" "-moz" "-ms-input";
  @each $placeholder in $placeholders {
    &:#{$placeholder}-placeholder {
      @content;
    }
  }
}

// Headings
@mixin h1 {
  font-family: $font-serif;
  font-size: 4.2rem;
  font-weight: 300;
  letter-spacing: -0.1rem;
  line-height: 1.3;
}